<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>1. Hexo官方开箱即用教程</title>
    <url>/2021/03/01/1.Hexo%E5%AE%98%E6%96%B9%E5%BC%80%E7%AE%B1%E5%8D%B3%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>HEXO</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>2. Hexo博客添加PWA支持</title>
    <url>/2021/03/02/2.Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0PWA%E6%94%AF%E6%8C%81/</url>
    <content><![CDATA[<h2 id="此示例不借助hexo-service-worker、hexo-offline和hexo-pwa等插件实现，自己编写-manifest-webmanifest-menifest-json-和-serviceWorker-js-并引入页面"><a href="#此示例不借助hexo-service-worker、hexo-offline和hexo-pwa等插件实现，自己编写-manifest-webmanifest-menifest-json-和-serviceWorker-js-并引入页面" class="headerlink" title="此示例不借助hexo-service-worker、hexo-offline和hexo-pwa等插件实现，自己编写 manifest.webmanifest(menifest.json)和 serviceWorker.js 并引入页面"></a>此示例不借助<a href="https://github.com/zoumiaojiang/hexo-service-worker">hexo-service-worker</a>、<a href="https://github.com/JLHwung/hexo-offline">hexo-offline</a>和<a href="https://github.com/lavas-project/hexo-pwa">hexo-pwa</a>等插件实现，自己编写 manifest.webmanifest(menifest.json)和 serviceWorker.js 并引入页面</h2><h3 id="编写-manifest-json"><a href="#编写-manifest-json" class="headerlink" title="编写 manifest.json"></a>编写 manifest.json</h3><ol>
<li><strong>Web App Manifest</strong>说明文档参考<a href="https://developer.mozilla.org/zh-CN/docs/Web/Manifest">MDN</a></li>
<li><strong>manifest.json</strong>简易生成器<a href="https://app-manifest.firebaseapp.com/">Web App Manifest Generator</a></li>
<li>如果不使用主题，把生成的<strong>manifest.json</strong>放置在项目<strong>source</strong>文件夹根目录，<strong>hexo</strong>发布时会放置在发布文件夹根目录(跟<strong>index.html</strong>同一级目录)</li>
<li>如果使用主题，比如<strong>NexT</strong>主题放在./themes/next，则把<strong>manifest.json</strong>放置在./themes/next/source/目录下</li>
</ol>
<span id="more"></span>

<h3 id="编写一个-Service-Worker-管理器-js，用于管理-Service-Worker-的安装、更新、卸载以及-Service-Worker-的同步、通知、Web-推送等任务"><a href="#编写一个-Service-Worker-管理器-js，用于管理-Service-Worker-的安装、更新、卸载以及-Service-Worker-的同步、通知、Web-推送等任务" class="headerlink" title="编写一个 Service Worker 管理器 js，用于管理 Service Worker 的安装、更新、卸载以及 Service Worker 的同步、通知、Web 推送等任务"></a>编写一个 Service Worker 管理器 js，用于管理 Service Worker 的安装、更新、卸载以及 Service Worker 的同步、通知、Web 推送等任务</h3><p><strong>sw.reg.mgr.js</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册Service Worker</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>config 配置项目</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">const</span> register = <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//浏览器是否支持</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;serviceWorker&quot;</span> <span class="keyword">in</span> navigator) &#123;</span><br><span class="line">            <span class="keyword">let</span> swUrl = <span class="string">`<span class="subst">$&#123;config.path&#125;</span>/<span class="subst">$&#123;config.name&#125;</span>?v=<span class="subst">$&#123;config.ver&#125;</span>`</span>;</span><br><span class="line">            <span class="comment">// 通过ver的变化来强制进行更新操作，每次更新sw.js时进行ver+1操作</span></span><br><span class="line">            navigator.serviceWorker</span><br><span class="line">                .register(swUrl)</span><br><span class="line">                .then(<span class="function">(<span class="params">swReg</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">&quot;Service Worker注册成功&quot;</span>);</span><br><span class="line">                    <span class="keyword">if</span> (config &amp;&amp; config.onRegister) &#123;</span><br><span class="line">                        config.onRegister(swReg);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    swReg.onupdatefound = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                        <span class="keyword">let</span> installingWorker = swReg.installing;</span><br><span class="line">                        <span class="keyword">if</span> (!installingWorker) &#123;</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        installingWorker.onstatechange = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                            <span class="keyword">if</span> (installingWorker.state === <span class="string">&quot;installed&quot;</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (navigator.serviceWorker.controller) &#123;</span><br><span class="line">                                    config.log &amp;&amp;</span><br><span class="line">                                        <span class="built_in">console</span>.log(<span class="string">&quot;Service Worker已安装更新&quot;</span>);</span><br><span class="line">                                    <span class="keyword">if</span> (config &amp;&amp; config.onUpdate) &#123;</span><br><span class="line">                                        config.onUpdate(swReg);</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                    config.log &amp;&amp;</span><br><span class="line">                                        <span class="built_in">console</span>.log(<span class="string">&quot;Service Worker已安装&quot;</span>);</span><br><span class="line">                                    <span class="keyword">if</span> (config &amp;&amp; config.onSuccess) &#123;</span><br><span class="line">                                        config.onSuccess(swReg);</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;;</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;)</span><br><span class="line">                .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (config &amp;&amp; config.onError) &#123;</span><br><span class="line">                        config.onError(err);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="built_in">console</span>.error(<span class="string">&quot;Service Worker注册期间发生错误:&quot;</span>, err);</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (navigator.serviceWorker.controller) &#123;</span><br><span class="line">                navigator.serviceWorker.controller.postMessage(</span><br><span class="line">                    <span class="string">&quot;这是从window环境postMessage()&quot;</span></span><br><span class="line">                );</span><br><span class="line"></span><br><span class="line">                <span class="keyword">const</span> channel = <span class="keyword">new</span> MessageChannel();</span><br><span class="line">                channel.port1.onmessage = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(</span><br><span class="line">                        <span class="string">`<span class="subst">$&#123;<span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString()&#125;</span>, index.html port1收到消息:<span class="subst">$&#123;</span></span></span><br><span class="line"><span class="string"><span class="subst">                            e.data</span></span></span><br><span class="line"><span class="string"><span class="subst">                        &#125;</span>`</span></span><br><span class="line">                    );</span><br><span class="line">                &#125;;</span><br><span class="line">                <span class="comment">// 向port2发送消息</span></span><br><span class="line">                navigator.serviceWorker.controller.postMessage(</span><br><span class="line">                    <span class="string">&quot;这是index.html向port2 postMessage()&quot;</span>,</span><br><span class="line">                    [channel.port2]</span><br><span class="line">                );</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            navigator.serviceWorker.onmessage = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(</span><br><span class="line">                    <span class="string">`<span class="subst">$&#123;<span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString()&#125;</span>, index.html收到的消息: <span class="subst">$&#123;</span></span></span><br><span class="line"><span class="string"><span class="subst">                        e.data</span></span></span><br><span class="line"><span class="string"><span class="subst">                    &#125;</span>`</span></span><br><span class="line">                );</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注销Service Worker</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">const</span> unregister = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;serviceWorker&quot;</span> <span class="keyword">in</span> navigator) &#123;</span><br><span class="line">            navigator.serviceWorker.ready.then(<span class="function">(<span class="params">swReg</span>) =&gt;</span> &#123;</span><br><span class="line">                swReg.unregister(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">                    result &amp;&amp; <span class="built_in">console</span>.log(<span class="string">&quot;Service Worker注销成功&quot;</span>);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> broad = <span class="keyword">new</span> BroadcastChannel(<span class="string">&quot;c1&quot;</span>);</span><br><span class="line">    broad.onmessage = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(</span><br><span class="line">            <span class="string">`<span class="subst">$&#123;<span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString()&#125;</span>, index.html收到的Service Worker广播消息:<span class="subst">$&#123;</span></span></span><br><span class="line"><span class="string"><span class="subst">                e.data</span></span></span><br><span class="line"><span class="string"><span class="subst">            &#125;</span>`</span></span><br><span class="line">        );</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注册sw.js</span></span><br><span class="line">    register(&#123;</span><br><span class="line">        ver: <span class="number">1</span>,</span><br><span class="line">        path: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        name: <span class="string">&quot;sw.js&quot;</span>,</span><br><span class="line">        log: <span class="literal">true</span>,</span><br><span class="line">        onRegister: <span class="function">() =&gt;</span> &#123;&#125;,</span><br><span class="line">        onSuccess: <span class="function">() =&gt;</span> &#123;&#125;,</span><br><span class="line">        onUpdate: <span class="function">() =&gt;</span> &#123;&#125;,</span><br><span class="line">        onError: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;&#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>

<h3 id="编写-Service-Worker-文件，这里借助谷歌Workbox帮助编写和管理-Service-Worker"><a href="#编写-Service-Worker-文件，这里借助谷歌Workbox帮助编写和管理-Service-Worker" class="headerlink" title="编写 Service Worker 文件，这里借助谷歌Workbox帮助编写和管理 Service Worker"></a>编写 Service Worker 文件，这里借助谷歌<a href="https://developers.google.cn/web/tools/workbox/guides/get-started?hl=zh-cn">Workbox</a>帮助编写和管理 Service Worker</h3><p><strong>Service Worker</strong>详细说明参照<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Service_Worker_API">MDN</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">importScripts(<span class="string">&quot;https://g.alicdn.com/kg/workbox/3.3.0/workbox-sw.js&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (workbox) &#123;</span><br><span class="line">    workbox.setConfig(&#123;</span><br><span class="line">        modulePathPrefix: <span class="string">&quot;https://g.alicdn.com/kg/workbox/3.3.0/&quot;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    workbox.precaching.precache([</span><br><span class="line">        <span class="string">&quot;/&quot;</span>,</span><br><span class="line">        <span class="string">&quot;/index.html&quot;</span>,</span><br><span class="line">        <span class="string">&quot;/404.html&quot;</span>,</span><br><span class="line">        <span class="string">&quot;/offline.html&quot;</span>,</span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line">    workbox.routing.registerRoute(</span><br><span class="line">        <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;^https?://tanwucheng.github.io/?$&quot;</span>),</span><br><span class="line">        workbox.strategies.networkFirst()</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    workbox.routing.registerRoute(</span><br><span class="line">        <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;.*.html&quot;</span>),</span><br><span class="line">        workbox.strategies.networkFirst()</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    workbox.routing.registerRoute(</span><br><span class="line">        <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;.*.(?:js|css|jpg|png|gif)&quot;</span>),</span><br><span class="line">        workbox.strategies.staleWhileRevalidate()</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Handling Offline Page fallback</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">this</span>.addEventListener(<span class="string">&quot;fetch&quot;</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">            event.request.mode === <span class="string">&quot;navigate&quot;</span> ||</span><br><span class="line">            (event.request.method === <span class="string">&quot;GET&quot;</span> &amp;&amp;</span><br><span class="line">                event.request.headers.get(<span class="string">&quot;accept&quot;</span>).includes(<span class="string">&quot;text/html&quot;</span>))</span><br><span class="line">        ) &#123;</span><br><span class="line">            event.respondWith(</span><br><span class="line">                fetch(event.request.url).catch(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">&quot;fetch error&quot;</span>, error);</span><br><span class="line">                    <span class="comment">// Return the offline page</span></span><br><span class="line">                    <span class="keyword">return</span> caches.match(<span class="string">&quot;/offline.html&quot;</span>);</span><br><span class="line">                &#125;)</span><br><span class="line">            );</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Respond with everything else if we can</span></span><br><span class="line">            event.respondWith(</span><br><span class="line">                caches.match(event.request).then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> response || fetch(event.request);</span><br><span class="line">                &#125;)</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Service-Worker-文件-sw-js-和-Service-Worker-sw-reg-mgr-jd-管理器放在跟-manifest-json-同一级目录"><a href="#Service-Worker-文件-sw-js-和-Service-Worker-sw-reg-mgr-jd-管理器放在跟-manifest-json-同一级目录" class="headerlink" title="Service Worker 文件(sw.js)和 Service Worker(sw.reg.mgr.jd)管理器放在跟 manifest.json 同一级目录"></a>Service Worker 文件(sw.js)和 Service Worker(sw.reg.mgr.jd)管理器放在跟 manifest.json 同一级目录</h3><h3 id="页面引入-manifest-json-和-Service-Worker"><a href="#页面引入-manifest-json-和-Service-Worker" class="headerlink" title="页面引入 manifest.json 和 Service Worker"></a>页面引入 manifest.json 和 Service Worker</h3><ul>
<li><p>  如果不使用主题，则在运行<strong>hexo generate</strong>命令后到./public 文件夹下修改<strong>index.html</strong>，在&lt;head&gt; 节点结束前引入<strong>manifest.json</strong>，在 &lt;body&gt; 结束前引入<strong>Service Worker</strong>管理器代码，应该有更简便的方式，还在查找资料中</p>
</li>
<li><p>  如果使用主题，比如<strong>NexT</strong>主题放在./themes/next，则修改./themes/next/layout/_layout.swig 文件，在 &lt;head&gt; 节点结束前引入<strong>manifest.json</strong>，在 &lt;body&gt; 结束前引入<strong>Service Worker</strong>管理器代码</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Other code here--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;manifest&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/manifest.json&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Other code here--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">            (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">window</span>.addEventListener) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">window</span>.addEventListener(<span class="string">&quot;load&quot;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> script = <span class="built_in">document</span>.createElement(<span class="string">&quot;script&quot;</span>);</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// script.src = `/sw.reg.mgr.js?t=$&#123;new Date()&#125;`; // 无缓存引用</span></span></span><br><span class="line"><span class="javascript">                        script.src = <span class="string">`/sw.reg.mgr.js`</span>; <span class="comment">// 无缓存引用</span></span></span><br><span class="line"><span class="javascript">                        script.async = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">                        script.type = <span class="string">&quot;text/javascript&quot;</span>;</span></span><br><span class="line"><span class="javascript">                        script.crossOrigin = <span class="string">&quot;anonymous&quot;</span>;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">document</span>.head.insertBefore(</span></span><br><span class="line">                            script,</span><br><span class="line"><span class="javascript">                            <span class="built_in">document</span>.head.firstChild</span></span><br><span class="line">                        );</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)();</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>HEXO</category>
        <category>PWA</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>3. 使用Gulp压缩发布的文件</title>
    <url>/2021/03/02/3.%E4%BD%BF%E7%94%A8Gulp%E5%8E%8B%E7%BC%A9%E5%8F%91%E5%B8%83%E7%9A%84%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h2 id="安装-Gulp-各个压缩模块并编写任务执行文件压缩"><a href="#安装-Gulp-各个压缩模块并编写任务执行文件压缩" class="headerlink" title="安装 Gulp 各个压缩模块并编写任务执行文件压缩"></a>安装 Gulp 各个压缩模块并编写任务执行文件压缩</h2><h3 id="安装-Gulp-和各个压缩模块"><a href="#安装-Gulp-和各个压缩模块" class="headerlink" title="安装 Gulp 和各个压缩模块"></a>安装 Gulp 和各个压缩模块</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; npm install gulp -g</span><br><span class="line">&gt; npm install gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --save</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="编写-Gulp-压缩任务-js-代码"><a href="#编写-Gulp-压缩任务-js-代码" class="headerlink" title="编写 Gulp 压缩任务 js 代码"></a>编写 Gulp 压缩任务 js 代码</h3><p>gulpfile.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> gulp = <span class="built_in">require</span>(<span class="string">&quot;gulp&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> minifyCss = <span class="built_in">require</span>(<span class="string">&quot;gulp-minify-css&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> uglify = <span class="built_in">require</span>(<span class="string">&quot;gulp-uglify&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> htmlmin = <span class="built_in">require</span>(<span class="string">&quot;gulp-htmlmin&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> htmlClean = <span class="built_in">require</span>(<span class="string">&quot;gulp-htmlclean&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> imagemin = <span class="built_in">require</span>(<span class="string">&quot;gulp-imagemin&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩html</span></span><br><span class="line">gulp.task(<span class="string">&quot;minify-html&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp</span><br><span class="line">        .src(<span class="string">&quot;./public/**/*.html&quot;</span>)</span><br><span class="line">        .pipe(htmlClean())</span><br><span class="line">        .pipe(</span><br><span class="line">            htmlmin(&#123;</span><br><span class="line">                removeComments: <span class="literal">true</span>,</span><br><span class="line">                minifyJS: <span class="literal">true</span>,</span><br><span class="line">                minifyCSS: <span class="literal">true</span>,</span><br><span class="line">                minifyURLs: <span class="literal">true</span>,</span><br><span class="line">            &#125;)</span><br><span class="line">        )</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&quot;./public&quot;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩css</span></span><br><span class="line">gulp.task(<span class="string">&quot;minify-css&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp</span><br><span class="line">        .src(<span class="string">&quot;./public/**/*.css&quot;</span>)</span><br><span class="line">        .pipe(</span><br><span class="line">            minifyCss(&#123;</span><br><span class="line">                compatibility: <span class="string">&quot;ie8&quot;</span>,</span><br><span class="line">            &#125;)</span><br><span class="line">        )</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&quot;./public&quot;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩js</span></span><br><span class="line">gulp.task(<span class="string">&quot;minify-js&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp</span><br><span class="line">        .src(<span class="string">&quot;./public/js/**/*.js&quot;</span>)</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&quot;./public&quot;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩图片</span></span><br><span class="line">gulp.task(<span class="string">&quot;minify-images&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp</span><br><span class="line">        .src(<span class="string">&quot;./public/images/**/*.*&quot;</span>)</span><br><span class="line">        .pipe(</span><br><span class="line">            imagemin(</span><br><span class="line">                [</span><br><span class="line">                    imagemin.gifsicle(&#123; <span class="attr">optimizationLevel</span>: <span class="number">3</span> &#125;),</span><br><span class="line">                    imagemin.mozjpeg(&#123; <span class="attr">progressive</span>: <span class="literal">true</span> &#125;),</span><br><span class="line">                    imagemin.optipng(&#123; <span class="attr">optimizationLevel</span>: <span class="number">7</span> &#125;),</span><br><span class="line">                ],</span><br><span class="line">                &#123; <span class="attr">verbose</span>: <span class="literal">true</span> &#125;</span><br><span class="line">            )</span><br><span class="line">        )</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&quot;./public/images&quot;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认任务</span></span><br><span class="line">gulp.task(<span class="string">&quot;default&quot;</span>, gulp.parallel(<span class="string">&quot;minify-html&quot;</span>, <span class="string">&quot;minify-css&quot;</span>, <span class="string">&quot;minify-js&quot;</span>));</span><br></pre></td></tr></table></figure>

<h3 id="执行-Gulp-压缩任务"><a href="#执行-Gulp-压缩任务" class="headerlink" title="执行 Gulp 压缩任务"></a>执行 Gulp 压缩任务</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; gulp</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>HEXO</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>Gulp</tag>
      </tags>
  </entry>
  <entry>
    <title>4. Hexo博客NexT主题设置RSS订阅</title>
    <url>/2021/03/03/4.Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AERSS%E8%AE%A2%E9%98%85/</url>
    <content><![CDATA[<h2 id="安装-hexo-generator-feed-插件并开启-RSS-订阅"><a href="#安装-hexo-generator-feed-插件并开启-RSS-订阅" class="headerlink" title="安装 hexo-generator-feed 插件并开启 RSS 订阅"></a>安装 hexo-generator-feed 插件并开启 RSS 订阅</h2><h3 id="在项目根目录下安装-hexo-generator-feed"><a href="#在项目根目录下安装-hexo-generator-feed" class="headerlink" title="在项目根目录下安装 hexo-generator-feed"></a>在项目根目录下安装 hexo-generator-feed</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="修改项目根目录的-config-yml，插件添加-hexo-generator-feed，设置-feed-属性"><a href="#修改项目根目录的-config-yml，插件添加-hexo-generator-feed，设置-feed-属性" class="headerlink" title="修改项目根目录的_config.yml，插件添加 hexo-generator-feed，设置 feed 属性"></a>修改项目根目录的_config.yml，插件添加 hexo-generator-feed，设置 feed 属性</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">Plugins:</span> <span class="string">hexo-generator-feed</span></span><br><span class="line"><span class="comment"># Feed Atom</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">hub:</span></span><br><span class="line">    <span class="attr">content:</span></span><br><span class="line">    <span class="attr">content_limit:</span> <span class="number">140</span></span><br><span class="line">    <span class="attr">content_limit_delim:</span> <span class="string">&quot; &quot;</span></span><br><span class="line">    <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">/images/favicon_200x200.png</span></span><br></pre></td></tr></table></figure>

<h3 id="修改主题根目录的-config-yml，添加-RSS-订阅入口"><a href="#修改主题根目录的-config-yml，添加-RSS-订阅入口" class="headerlink" title="修改主题根目录的_config.yml，添加 RSS 订阅入口"></a>修改主题根目录的_config.yml，添加 RSS 订阅入口</h3><ul>
<li>  修改<strong>social</strong>节点，添加一行启用 RSS 图标</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">    <span class="comment"># 其他社交按钮</span></span><br><span class="line">    <span class="attr">RSS:</span> <span class="string">/atom.xml</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-rss</span></span><br></pre></td></tr></table></figure>

<ul>
<li>  修改<strong>follow_me</strong>节点，开启 RSS 订阅入口</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">follow_me:</span></span><br><span class="line">    <span class="comment"># 其他社交按钮</span></span><br><span class="line">    <span class="attr">RSS:</span> <span class="string">/atom.xml</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-rss</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>HEXO</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>5. Hexo博客NexT主题开启站内搜索</title>
    <url>/2021/03/03/5.Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2/</url>
    <content><![CDATA[<h2 id="NexT-主题配置-Local-Search-开启站内搜索"><a href="#NexT-主题配置-Local-Search-开启站内搜索" class="headerlink" title="NexT 主题配置 Local Search 开启站内搜索"></a>NexT 主题配置 Local Search 开启站内搜索</h2><h3 id="安装-hexo-generator-search"><a href="#安装-hexo-generator-search" class="headerlink" title="安装 hexo-generator-search"></a>安装 hexo-generator-search</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="安装-hexo-generator-searchdb"><a href="#安装-hexo-generator-searchdb" class="headerlink" title="安装 hexo-generator-searchdb"></a>安装 hexo-generator-searchdb</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<h3 id="Hexo-博客根目录-config-yml-添加如下内容启用搜索"><a href="#Hexo-博客根目录-config-yml-添加如下内容启用搜索" class="headerlink" title="Hexo 博客根目录_config.yml 添加如下内容启用搜索"></a>Hexo 博客根目录_config.yml 添加如下内容启用搜索</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">    <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">    <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>

<h3 id="修改-NexT-主题根目录下的-config-yml-文件的-local-search-节点启用搜索"><a href="#修改-NexT-主题根目录下的-config-yml-文件的-local-search-节点启用搜索" class="headerlink" title="修改 NexT 主题根目录下的_config.yml 文件的 local_search 节点启用搜索"></a>修改 NexT 主题根目录下的_config.yml 文件的 local_search 节点启用搜索</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>HEXO</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>6. Hexo博客NexT主题一些常用客制化修改</title>
    <url>/2021/03/03/6.Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E5%AE%A2%E5%88%B6%E5%8C%96%E4%BF%AE%E6%94%B9/</url>
    <content><![CDATA[<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul>
<li>  修改文章内链接文本样式、</li>
<li>  修改底部标签样式</li>
<li>  主页文章添加阴影效果</li>
<li>  显示文章结束标记</li>
<li>  网站底部加上访问量</li>
<li>  网站底部字数统计</li>
<li>  实现文章统计功能</li>
</ul>
<blockquote>
<p>参照<a href="https://www.jianshu.com/p/9f0e90cc32c2">简书</a></p>
</blockquote>
<h3 id="修改文章内链接文本样式"><a href="#修改文章内链接文本样式" class="headerlink" title="修改文章内链接文本样式"></a>修改文章内链接文本样式</h3><p>修改<strong>themes/next/source/css/_common/components/post/post.styl</strong>，在末尾添加如下 css 样式</p>
<span id="more"></span>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 文章内链接文本样式 */</span></span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="comment">/* 原始链接颜色 */</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#0593d3</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">    <span class="comment">/* 底部分割线颜色 */</span></span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#0593d3</span>;</span><br><span class="line">    &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">        <span class="comment">/* 鼠标经过颜色 */</span></span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#fc6423</span>;</span><br><span class="line">        <span class="attribute">border-bottom</span>: none;</span><br><span class="line">        <span class="comment">/* 底部分割线颜色 */</span></span><br><span class="line">        <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#fc6423</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="修改底部标签样式"><a href="#修改底部标签样式" class="headerlink" title="修改底部标签样式"></a>修改底部标签样式</h3><p>修改 NexT 主题的_config.yml 文件，修改<strong>tag_icon</strong>节点值为<strong>true</strong>，即可启用<strong>fa fa-tag</strong>标签图标</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">tag_icon:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="主页文章添加阴影效果"><a href="#主页文章添加阴影效果" class="headerlink" title="主页文章添加阴影效果"></a>主页文章添加阴影效果</h3><p>在文件<strong>themes/next/source/css/_common/components/post/post.styl</strong>中，找到.post-block 处，修改 if 判断成立时里面 css 样式如下</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 主页文章添加阴影效果 */</span></span><br><span class="line"><span class="selector-class">.post-block</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/* margin-top: 30px; */</span></span><br><span class="line">    <span class="comment">/* margin-bottom: 30px; */</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, <span class="number">0.5</span>);</span><br><span class="line">    -webkit-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, <span class="number">0.5</span>);</span><br><span class="line">    -moz-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">202</span>, <span class="number">203</span>, <span class="number">204</span>, <span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.pagination</span>,</span><br><span class="line"><span class="selector-class">.comments</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="显示文章结束标记"><a href="#显示文章结束标记" class="headerlink" title="显示文章结束标记"></a>显示文章结束标记</h3><ul>
<li>  在<strong>themes/next/layout/_macro/<strong>路径下新建文件</strong>passage-end-tag.swig</strong>，输入一下内容</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;color: #ccc;font-size:14px;&quot;</span>&gt;</span></span><br><span class="line">        -------------本文结束<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-paw&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>感谢您的阅读-------------</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>  修改<strong>NexT</strong>主题目录下文件<strong>themes/next/layout/_macro/_post.swig</strong>，在<strong>END POST BODY</strong>后面添加如下文章结束标记</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% if not is_index %&#125; &#123;% include &#x27;passage-end-tag.swig&#x27; %&#125; &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="网站底部加上访问量"><a href="#网站底部加上访问量" class="headerlink" title="网站底部加上访问量"></a>网站底部加上访问量</h3><ul>
<li>  修改<strong>themes/next/layout/_partials/footer.swig</strong>文件，在<strong>copyright</strong>处加上<a href="http://busuanzi.ibruce.info/">不蒜子</a>网页计数器</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;script</span><br><span class="line">    async</span><br><span class="line">    src=&quot;//cdn.jsdelivr.net/gh/sukkaw/busuanzi@2.3/bsz.pure.mini.js&quot;</span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>  在底部与<strong>powered-by</strong>前面添加访问量显示</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;powered-by&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-user-md&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_container_site_uv&quot;</span>&gt;</span></span><br><span class="line">        本站访客数:<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_uv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-divider&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--pv的方式，单个用户连续点击n篇文章，记录n次访问量--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_container_site_pv&quot;</span>&gt;</span></span><br><span class="line">    本站总访问量<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_pv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--uv的方式，单个用户连续点击n篇文章，只记录1次访客数--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_container_site_uv&quot;</span>&gt;</span></span><br><span class="line">    本站总访问量<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_uv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="网站底部字数统计"><a href="#网站底部字数统计" class="headerlink" title="网站底部字数统计"></a>网站底部字数统计</h3><ul>
<li>  安装<strong>hexo-wordcount</strong>插件</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>

<ul>
<li>  在文件<strong>themes/next/layout/_partials/footer.swig</strong>末尾添加如下内容</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-divider&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;theme-info&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;powered-by&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-count&quot;</span>&gt;</span>博客全站共&#123;&#123; totalcount(site) &#125;&#125;字<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="实现文章统计功能"><a href="#实现文章统计功能" class="headerlink" title="实现文章统计功能"></a>实现文章统计功能</h3><ul>
<li>  安装<code>hexo-symbols-count-time</code>插件，详细说明请查看<a href="https://github.com/theme-next/hexo-symbols-count-time">GitHub</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure>

<ul>
<li>  配置博客根目录下的<strong>_config.yml 添加</strong>文件节点<strong>symbols-count-time</strong>如下，开启文章统计功能</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">    <span class="attr">symbols:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">time:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">total_symbols:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">total_time:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">exclude_codeblock:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">awl:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">wpm:</span> <span class="number">275</span></span><br><span class="line">    <span class="attr">suffix:</span> <span class="string">&quot;mins.&quot;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>HEXO</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Razor组件加载完毕如何执行回调</title>
    <url>/2021/03/03/Razor%E7%BB%84%E4%BB%B6%E5%8A%A0%E8%BD%BD%E5%AE%8C%E6%AF%95%E5%A6%82%E4%BD%95%E6%89%A7%E8%A1%8C%E5%9B%9E%E8%B0%83/</url>
    <content><![CDATA[<h2 id="Razor-组件加载完毕如何执行回调？"><a href="#Razor-组件加载完毕如何执行回调？" class="headerlink" title="Razor 组件加载完毕如何执行回调？"></a>Razor 组件加载完毕如何执行回调？</h2><blockquote>
<p>参考<a href="https://stackoverflow.com/questions/61551404/in-blazor-how-to-call-a-function-at-page-load-event-name" target="_blank">StackOverflow</a></p>
</blockquote>
<span id="more"></span>

<p><strong><em>1.重写 Razor 组件的 OnInitializedAsync()方法</em></strong></p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">@code &#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SomeStartupMethod</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// Do Some Work</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">Task <span class="title">SomeStartupTask</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// Do some task based work</span></span><br><span class="line">        <span class="keyword">return</span> Task.CompletedTask;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">async</span> Task <span class="title">OnInitializedAsync</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        SomeStartupMethod();</span><br><span class="line">        <span class="keyword">await</span> SomeStartupTask();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong><em>2.重写 Razor 组件的 OnAfterRender()方法</em></strong></p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">@code&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnAfterRender</span>(<span class="params"><span class="built_in">bool</span> firstRender</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// execute conditionally for loading data, otherwise this will load</span></span><br><span class="line">        <span class="comment">// every time the page refreshes</span></span><br><span class="line">        <span class="keyword">if</span>(firstRender)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// Do work to load page data and set properties</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>.NET</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>Blazor</tag>
      </tags>
  </entry>
  <entry>
    <title>第一篇Post</title>
    <url>/2021/03/03/%E7%AC%AC%E4%B8%80%E7%AF%87Post/</url>
    <content><![CDATA[<p>🎉欢迎来到我的博客网站🎉</p>
]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>废话</tag>
      </tags>
  </entry>
  <entry>
    <title>论语十则</title>
    <url>/2021/03/03/%E8%AE%BA%E8%AF%AD%E5%8D%81%E5%88%99/</url>
    <content><![CDATA[<p>论语十则及其翻译</p>
<h2 id="《论语十则》"><a href="#《论语十则》" class="headerlink" title="《论语十则》"></a>《论语十则》</h2><h3 id="作者：孔子及其弟子"><a href="#作者：孔子及其弟子" class="headerlink" title="作者：孔子及其弟子"></a>作者：孔子及其弟子</h3><ol>
<li><p>子曰：“<strong>学而时习之，不亦说乎？有朋自远方来，不亦乐乎？人不知而不愠，不亦君子乎？</strong>”（《学而》）</p>
<p> 翻译：孔子说：“学习知识并且按时温习它，不也是令人高兴的事吗？有朋友从远方来（交流、学习），不也是令人快乐的事吗？别人不了解自己也不怨恨，不正是品德高尚的人吗？”</p>
</li>
</ol>
<span id="more"></span>

<ol start="2">
<li><p>曾子曰：“<strong>吾日三省吾身：为人谋而不忠乎？与朋友交而不信乎？传不习乎？</strong>”（《学而》）</p>
<p> 翻译：曾子说：“我每天多次地反省自己：替别人办事是不是尽心尽力呢？跟朋友交往是不是真诚，诚实呢？老师传授的知识是否复习过了呢？”</p>
</li>
<li><p>子曰：“<strong>温故而知新，可以为师矣。</strong>”（《为政》）</p>
<p> 翻译：曾子说：“我每天反复检查我的行为：为人处事有不真诚的事吗？与朋友交往有不诚实的事吗？老师教授的知识有不复习的吗？” 孔子说：“复习旧的知识从而知道新的知识，可以凭借这个成为老师了。”</p>
</li>
<li><p>子曰：“<strong>学而不思则罔，思而不学则殆。</strong>”（《为政》）</p>
<p> 翻译：孔子说：“只读书却不认真思考，就会迷惑；只空想而不读书，就会疑惑。”</p>
</li>
<li><p>子曰：“<strong>由，诲汝知之乎！知之为知之，不知为不知，是知也。</strong>”（《为政》）</p>
<p> 翻译：孔子说：“仲由，教给你的理解了吗？懂得就是懂得，不懂就是不懂，这也是聪明啊。”</p>
</li>
<li><p>子曰：“<strong>见贤思齐焉，见不贤而内自省也。</strong>”（《里仁》）</p>
<p> 翻译：孔子说：“见到贤人就要向他学习，希望能达到他的水平，见到不好的人就要自我反省。”</p>
</li>
<li><p>子曰：“<strong>三人行，必有我师焉。择其善者而从之，其不善者而改之。</strong>”（《述而》）</p>
<p> 翻译：孔子说：“三个人一起走，其中必定有可以做我老师的人，学习他的优点，如果自己也有他的缺点就加以改正。”</p>
</li>
<li><p>曾子曰：“<strong>士不可以不弘毅，任重而道远。仁以为己任，不亦重乎？死而后已，不亦远乎？</strong>”（《泰伯》）</p>
<p> 翻译：曾子说：“有抱负的人不可以不胸怀宽广，意志坚定，因为他肩负着重大的使命（或责任），路途又很遥远。把实现‘仁’的理想看作自己的使命，不也很重大吗？直到死才停止，这不也是很遥远吗？”</p>
</li>
<li><p>子曰：“<strong>岁寒，然后知松柏之后凋也。</strong>”（《子罕》）</p>
<p> 翻译：孔子说：“年末天气寒冷，这时才能知道松柏是最后凋零的。”</p>
</li>
<li><p>子贡问曰：“<strong>有一言而可以终身行之者乎？” 子曰：“其恕乎！己所不欲，勿施于人。</strong>”（《卫灵公》）</p>
<p>解释：子贡问孔子：“有没有一句忠言可以一生受用遵循的呢？” 孔子说：“也许就是仁爱待人！自己所不愿要的，不要强加到别人身上。”</p>
</li>
</ol>
]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>谚语</tag>
      </tags>
  </entry>
</search>
